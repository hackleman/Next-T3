import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Image from "next/image";

import { api, type RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;
  return (
    <div className="flex gap-4 w-full">
      <Image src={user.imageUrl} alt="profile image" width="48" height="48" className="rounded-full"/>
      <input 
        placeholder="Type some emojis" 
        className="bg-transparent grow outline-none"
      />
    </div>
  )
}

type UserPost = RouterOutputs["post"]["getAll"][number];

const PostView = (props: UserPost) => {
  const { post, author } = props;

  return (
    <div key={post.id} className="p-4 gap-3 border-b border-slate-400 flex">
      <Image 
          src={author.pfp} 
          alt={`@${author.username}'s profile pic`} 
          width="48" height="48" 
          className="rounded-full"
        />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span>@{author.username}</span>
          <span className="font-thin">{` Â·  ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

export default function Home() {
  const user = useUser();
  const { data } = api.post.getAll.useQuery();

  if (!data) return <div>Loading...</div>;

  console.log(data);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full  border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && <div className="flex justify-center"><SignInButton /></div>}
            {!!user.isSignedIn && <CreatePostWizard/>}
          </div>
          <div className="flex flex-col">
              {[...data, ...data]?.map((fullPost, index) => (
                  <PostView {...fullPost} key={index}/>
              ))}
          </div>
        </div>
      </main>
    </>
  );
}
